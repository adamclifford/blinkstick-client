
// This file has been generated by the GUI designer. Do not modify.
namespace BlinkStickClient
{
	public partial class ApplicationEditorWidget
	{
		private global::Gtk.Table table1;
		
		private global::Gtk.Entry entrySearchString;
		
		private global::Gtk.Label labelSearchString;
		
		private global::Gtk.Label labelSearchStringHint;

		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget BlinkStickClient.ApplicationEditorWidget
			global::Stetic.BinContainer.Attach (this);
			this.Name = "BlinkStickClient.ApplicationEditorWidget";
			// Container child BlinkStickClient.ApplicationEditorWidget.Gtk.Container+ContainerChild
			this.table1 = new global::Gtk.Table (((uint)(2)), ((uint)(2)), false);
			this.table1.Name = "table1";
			this.table1.RowSpacing = ((uint)(6));
			this.table1.ColumnSpacing = ((uint)(6));
			this.table1.BorderWidth = ((uint)(6));
			// Container child table1.Gtk.Table+TableChild
			this.entrySearchString = new global::Gtk.Entry ();
			this.entrySearchString.CanFocus = true;
			this.entrySearchString.Name = "entrySearchString";
			this.entrySearchString.IsEditable = true;
			this.entrySearchString.InvisibleChar = '‚óè';
			this.table1.Add (this.entrySearchString);
			global::Gtk.Table.TableChild w1 = ((global::Gtk.Table.TableChild)(this.table1 [this.entrySearchString]));
			w1.LeftAttach = ((uint)(1));
			w1.RightAttach = ((uint)(2));
			w1.XOptions = ((global::Gtk.AttachOptions)(4));
			w1.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.labelSearchString = new global::Gtk.Label ();
			this.labelSearchString.Name = "labelSearchString";
			this.labelSearchString.LabelProp = global::Mono.Unix.Catalog.GetString ("Search String:");
			this.table1.Add (this.labelSearchString);
			global::Gtk.Table.TableChild w2 = ((global::Gtk.Table.TableChild)(this.table1 [this.labelSearchString]));
			w2.XOptions = ((global::Gtk.AttachOptions)(4));
			w2.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.labelSearchStringHint = new global::Gtk.Label ();
			this.labelSearchStringHint.Name = "labelSearchStringHint";
			this.labelSearchStringHint.Xalign = 0F;
			this.labelSearchStringHint.LabelProp = global::Mono.Unix.Catalog.GetString ("<i>Search for this string in application executable name or active window title when active application changes.</i>\n\n<i>Examples:</i>\n\n<i>firefox.exe - pattern will be triggered every time Firefox browser is activated</i>\n\n<i>google - pattern will be triggered every time a window which contains google in the title is activated</i>\n\n<i>Notepad - pattern will be triggered every time a window which contains Notepad in the title is activated</i>\n\nSearch is case insensitive.\n");
			this.labelSearchStringHint.UseMarkup = true;
			this.labelSearchStringHint.Wrap = true;
			this.table1.Add (this.labelSearchStringHint);
			global::Gtk.Table.TableChild w3 = ((global::Gtk.Table.TableChild)(this.table1 [this.labelSearchStringHint]));
			w3.TopAttach = ((uint)(1));
			w3.BottomAttach = ((uint)(2));
			w3.LeftAttach = ((uint)(1));
			w3.RightAttach = ((uint)(2));
			w3.XOptions = ((global::Gtk.AttachOptions)(4));
			w3.YOptions = ((global::Gtk.AttachOptions)(4));
			this.Add (this.table1);
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			this.Hide ();
		}
	}
}
