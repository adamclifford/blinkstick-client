
// This file has been generated by the GUI designer. Do not modify.
namespace BlinkStickClient
{
	public partial class BlinkStickDotComEditorWidget
	{
		private global::Gtk.Table table1;
		
		private global::Gtk.Button buttonPaste;
		
		private global::Gtk.Button buttonRegisterDevice;
		
		private global::Gtk.Entry entryAccessCode;
		
		private global::Gtk.HSeparator hseparator1;
		
		private global::Gtk.Label label1;
		
		private global::Gtk.Label labelMonitorHint;
		
		private global::Gtk.Label labelMonitorHint1;

		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget BlinkStickClient.BlinkStickDotComEditorWidget
			global::Stetic.BinContainer.Attach (this);
			this.Name = "BlinkStickClient.BlinkStickDotComEditorWidget";
			// Container child BlinkStickClient.BlinkStickDotComEditorWidget.Gtk.Container+ContainerChild
			this.table1 = new global::Gtk.Table (((uint)(4)), ((uint)(3)), false);
			this.table1.Name = "table1";
			this.table1.RowSpacing = ((uint)(6));
			this.table1.ColumnSpacing = ((uint)(6));
			this.table1.BorderWidth = ((uint)(12));
			// Container child table1.Gtk.Table+TableChild
			this.buttonPaste = new global::Gtk.Button ();
			this.buttonPaste.CanFocus = true;
			this.buttonPaste.Name = "buttonPaste";
			this.buttonPaste.UseUnderline = true;
			this.buttonPaste.Label = global::Mono.Unix.Catalog.GetString ("Paste");
			global::Gtk.Image w1 = new global::Gtk.Image ();
			w1.Pixbuf = global::Stetic.IconLoader.LoadIcon (this, "gtk-paste", global::Gtk.IconSize.Menu);
			this.buttonPaste.Image = w1;
			this.table1.Add (this.buttonPaste);
			global::Gtk.Table.TableChild w2 = ((global::Gtk.Table.TableChild)(this.table1 [this.buttonPaste]));
			w2.LeftAttach = ((uint)(2));
			w2.RightAttach = ((uint)(3));
			w2.XOptions = ((global::Gtk.AttachOptions)(4));
			w2.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.buttonRegisterDevice = new global::Gtk.Button ();
			this.buttonRegisterDevice.CanFocus = true;
			this.buttonRegisterDevice.Name = "buttonRegisterDevice";
			this.buttonRegisterDevice.UseUnderline = true;
			this.buttonRegisterDevice.Label = global::Mono.Unix.Catalog.GetString ("Register Device");
			this.table1.Add (this.buttonRegisterDevice);
			global::Gtk.Table.TableChild w3 = ((global::Gtk.Table.TableChild)(this.table1 [this.buttonRegisterDevice]));
			w3.TopAttach = ((uint)(3));
			w3.BottomAttach = ((uint)(4));
			w3.LeftAttach = ((uint)(2));
			w3.RightAttach = ((uint)(3));
			w3.XOptions = ((global::Gtk.AttachOptions)(4));
			w3.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.entryAccessCode = new global::Gtk.Entry ();
			this.entryAccessCode.CanFocus = true;
			this.entryAccessCode.Name = "entryAccessCode";
			this.entryAccessCode.IsEditable = true;
			this.entryAccessCode.InvisibleChar = '‚óè';
			this.table1.Add (this.entryAccessCode);
			global::Gtk.Table.TableChild w4 = ((global::Gtk.Table.TableChild)(this.table1 [this.entryAccessCode]));
			w4.LeftAttach = ((uint)(1));
			w4.RightAttach = ((uint)(2));
			w4.XOptions = ((global::Gtk.AttachOptions)(4));
			w4.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.hseparator1 = new global::Gtk.HSeparator ();
			this.hseparator1.Name = "hseparator1";
			this.table1.Add (this.hseparator1);
			global::Gtk.Table.TableChild w5 = ((global::Gtk.Table.TableChild)(this.table1 [this.hseparator1]));
			w5.TopAttach = ((uint)(2));
			w5.BottomAttach = ((uint)(3));
			w5.RightAttach = ((uint)(3));
			w5.XOptions = ((global::Gtk.AttachOptions)(4));
			w5.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.label1 = new global::Gtk.Label ();
			this.label1.Name = "label1";
			this.label1.LabelProp = global::Mono.Unix.Catalog.GetString ("Access Code:");
			this.table1.Add (this.label1);
			global::Gtk.Table.TableChild w6 = ((global::Gtk.Table.TableChild)(this.table1 [this.label1]));
			w6.XOptions = ((global::Gtk.AttachOptions)(4));
			w6.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.labelMonitorHint = new global::Gtk.Label ();
			this.labelMonitorHint.Name = "labelMonitorHint";
			this.labelMonitorHint.Xalign = 0F;
			this.labelMonitorHint.LabelProp = global::Mono.Unix.Catalog.GetString ("<i>Connects to BlinkStick.com via the access code and allows remote control from " +
			"any device with Internet connection.</i>");
			this.labelMonitorHint.UseMarkup = true;
			this.labelMonitorHint.Wrap = true;
			this.table1.Add (this.labelMonitorHint);
			global::Gtk.Table.TableChild w7 = ((global::Gtk.Table.TableChild)(this.table1 [this.labelMonitorHint]));
			w7.TopAttach = ((uint)(1));
			w7.BottomAttach = ((uint)(2));
			w7.LeftAttach = ((uint)(1));
			w7.RightAttach = ((uint)(3));
			w7.XOptions = ((global::Gtk.AttachOptions)(4));
			w7.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.labelMonitorHint1 = new global::Gtk.Label ();
			this.labelMonitorHint1.Name = "labelMonitorHint1";
			this.labelMonitorHint1.Xalign = 0F;
			this.labelMonitorHint1.LabelProp = global::Mono.Unix.Catalog.GetString ("<i>Click the button on the right to register a new device on BlinkStick.com and g" +
			"et the access code.</i>");
			this.labelMonitorHint1.UseMarkup = true;
			this.labelMonitorHint1.Wrap = true;
			this.table1.Add (this.labelMonitorHint1);
			global::Gtk.Table.TableChild w8 = ((global::Gtk.Table.TableChild)(this.table1 [this.labelMonitorHint1]));
			w8.TopAttach = ((uint)(3));
			w8.BottomAttach = ((uint)(4));
			w8.RightAttach = ((uint)(2));
			w8.XOptions = ((global::Gtk.AttachOptions)(4));
			w8.YOptions = ((global::Gtk.AttachOptions)(4));
			this.Add (this.table1);
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			this.Hide ();
			this.buttonRegisterDevice.Clicked += new global::System.EventHandler (this.OnButtonRegisterDeviceClicked);
			this.buttonPaste.Clicked += new global::System.EventHandler (this.OnButtonPasteClicked);
		}
	}
}
