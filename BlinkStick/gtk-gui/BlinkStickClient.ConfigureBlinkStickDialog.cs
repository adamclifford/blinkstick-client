
// This file has been generated by the GUI designer. Do not modify.
namespace BlinkStickClient
{
	public partial class ConfigureBlinkStickDialog
	{
		private global::Gtk.Table table1;
		
		private global::Gtk.CheckButton checkbuttonChannelB;
		
		private global::Gtk.CheckButton checkbuttonChannelG;
		
		private global::Gtk.CheckButton checkbuttonChannelR;
		
		private global::Gtk.Entry entryData;
		
		private global::Gtk.Entry entryName;
		
		private global::Gtk.HScale hscaleLimitBrightness;
		
		private global::Gtk.HSeparator hseparator1;
		
		private global::Gtk.HSeparator hseparator2;
		
		private global::Gtk.HSeparator hseparator3;
		
		private global::Gtk.Label labelData;
		
		private global::Gtk.Label labelDataHint;
		
		private global::Gtk.Label labelLedConfiguration;
		
		private global::Gtk.Label labelLedConfigurationHint;
		
		private global::Gtk.Label labelLimitBrightness;
		
		private global::Gtk.Label labelLimitBrightnessHint;
		
		private global::Gtk.Label labelMode;
		
		private global::Gtk.Label labelModeInverseHint;
		
		private global::Gtk.Label labelModeMultiLEDHint;
		
		private global::Gtk.Label labelModeMultiLEDMirrorHint;
		
		private global::Gtk.Label labelModeRGBHint;
		
		private global::Gtk.Label labelName;
		
		private global::Gtk.Label labelNameHint;
		
		private global::Gtk.RadioButton radiobuttonModeInverse;
		
		private global::Gtk.RadioButton radiobuttonModeMultiLED;
		
		private global::Gtk.RadioButton radiobuttonModeMultiLEDMirror;
		
		private global::Gtk.RadioButton radiobuttonModeRGB;
		
		private global::Gtk.SpinButton spinbuttonChannelB;
		
		private global::Gtk.SpinButton spinbuttonChannelG;
		
		private global::Gtk.SpinButton spinbuttonChannelR;
		
		private global::Gtk.Button buttonCancel;
		
		private global::Gtk.Button buttonOk;

		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget BlinkStickClient.ConfigureBlinkStickDialog
			this.Name = "BlinkStickClient.ConfigureBlinkStickDialog";
			this.Title = global::Mono.Unix.Catalog.GetString ("Configure BlinkStick");
			this.WindowPosition = ((global::Gtk.WindowPosition)(1));
			this.Modal = true;
			this.Resizable = false;
			this.AllowGrow = false;
			this.SkipPagerHint = true;
			this.SkipTaskbarHint = true;
			// Internal child BlinkStickClient.ConfigureBlinkStickDialog.VBox
			global::Gtk.VBox w1 = this.VBox;
			w1.Name = "dialog1_VBox";
			w1.BorderWidth = ((uint)(2));
			// Container child dialog1_VBox.Gtk.Box+BoxChild
			this.table1 = new global::Gtk.Table (((uint)(21)), ((uint)(3)), false);
			this.table1.Name = "table1";
			this.table1.RowSpacing = ((uint)(6));
			this.table1.ColumnSpacing = ((uint)(6));
			this.table1.BorderWidth = ((uint)(12));
			// Container child table1.Gtk.Table+TableChild
			this.checkbuttonChannelB = new global::Gtk.CheckButton ();
			this.checkbuttonChannelB.CanFocus = true;
			this.checkbuttonChannelB.Name = "checkbuttonChannelB";
			this.checkbuttonChannelB.Label = global::Mono.Unix.Catalog.GetString ("B Channel");
			this.checkbuttonChannelB.DrawIndicator = true;
			this.checkbuttonChannelB.UseUnderline = true;
			this.table1.Add (this.checkbuttonChannelB);
			global::Gtk.Table.TableChild w2 = ((global::Gtk.Table.TableChild)(this.table1 [this.checkbuttonChannelB]));
			w2.TopAttach = ((uint)(7));
			w2.BottomAttach = ((uint)(8));
			w2.LeftAttach = ((uint)(1));
			w2.RightAttach = ((uint)(2));
			w2.XOptions = ((global::Gtk.AttachOptions)(4));
			w2.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.checkbuttonChannelG = new global::Gtk.CheckButton ();
			this.checkbuttonChannelG.CanFocus = true;
			this.checkbuttonChannelG.Name = "checkbuttonChannelG";
			this.checkbuttonChannelG.Label = global::Mono.Unix.Catalog.GetString ("G Channel");
			this.checkbuttonChannelG.DrawIndicator = true;
			this.checkbuttonChannelG.UseUnderline = true;
			this.table1.Add (this.checkbuttonChannelG);
			global::Gtk.Table.TableChild w3 = ((global::Gtk.Table.TableChild)(this.table1 [this.checkbuttonChannelG]));
			w3.TopAttach = ((uint)(6));
			w3.BottomAttach = ((uint)(7));
			w3.LeftAttach = ((uint)(1));
			w3.RightAttach = ((uint)(2));
			w3.XOptions = ((global::Gtk.AttachOptions)(4));
			w3.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.checkbuttonChannelR = new global::Gtk.CheckButton ();
			this.checkbuttonChannelR.CanFocus = true;
			this.checkbuttonChannelR.Name = "checkbuttonChannelR";
			this.checkbuttonChannelR.Label = global::Mono.Unix.Catalog.GetString ("R Channel");
			this.checkbuttonChannelR.DrawIndicator = true;
			this.checkbuttonChannelR.UseUnderline = true;
			this.table1.Add (this.checkbuttonChannelR);
			global::Gtk.Table.TableChild w4 = ((global::Gtk.Table.TableChild)(this.table1 [this.checkbuttonChannelR]));
			w4.TopAttach = ((uint)(5));
			w4.BottomAttach = ((uint)(6));
			w4.LeftAttach = ((uint)(1));
			w4.RightAttach = ((uint)(2));
			w4.XOptions = ((global::Gtk.AttachOptions)(4));
			w4.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.entryData = new global::Gtk.Entry ();
			this.entryData.CanFocus = true;
			this.entryData.Name = "entryData";
			this.entryData.IsEditable = true;
			this.entryData.MaxLength = 32;
			this.entryData.InvisibleChar = '●';
			this.table1.Add (this.entryData);
			global::Gtk.Table.TableChild w5 = ((global::Gtk.Table.TableChild)(this.table1 [this.entryData]));
			w5.TopAttach = ((uint)(2));
			w5.BottomAttach = ((uint)(3));
			w5.LeftAttach = ((uint)(1));
			w5.RightAttach = ((uint)(3));
			w5.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.entryName = new global::Gtk.Entry ();
			this.entryName.CanFocus = true;
			this.entryName.Name = "entryName";
			this.entryName.IsEditable = true;
			this.entryName.MaxLength = 32;
			this.entryName.InvisibleChar = '●';
			this.table1.Add (this.entryName);
			global::Gtk.Table.TableChild w6 = ((global::Gtk.Table.TableChild)(this.table1 [this.entryName]));
			w6.LeftAttach = ((uint)(1));
			w6.RightAttach = ((uint)(3));
			w6.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.hscaleLimitBrightness = new global::Gtk.HScale (null);
			this.hscaleLimitBrightness.CanFocus = true;
			this.hscaleLimitBrightness.Name = "hscaleLimitBrightness";
			this.hscaleLimitBrightness.Adjustment.Lower = 1D;
			this.hscaleLimitBrightness.Adjustment.Upper = 100D;
			this.hscaleLimitBrightness.Adjustment.PageIncrement = 10D;
			this.hscaleLimitBrightness.Adjustment.StepIncrement = 1D;
			this.hscaleLimitBrightness.Adjustment.Value = 100D;
			this.hscaleLimitBrightness.DrawValue = true;
			this.hscaleLimitBrightness.Digits = 0;
			this.hscaleLimitBrightness.ValuePos = ((global::Gtk.PositionType)(3));
			this.table1.Add (this.hscaleLimitBrightness);
			global::Gtk.Table.TableChild w7 = ((global::Gtk.Table.TableChild)(this.table1 [this.hscaleLimitBrightness]));
			w7.TopAttach = ((uint)(10));
			w7.BottomAttach = ((uint)(11));
			w7.LeftAttach = ((uint)(1));
			w7.RightAttach = ((uint)(3));
			w7.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.hseparator1 = new global::Gtk.HSeparator ();
			this.hseparator1.Name = "hseparator1";
			this.table1.Add (this.hseparator1);
			global::Gtk.Table.TableChild w8 = ((global::Gtk.Table.TableChild)(this.table1 [this.hseparator1]));
			w8.TopAttach = ((uint)(4));
			w8.BottomAttach = ((uint)(5));
			w8.RightAttach = ((uint)(3));
			w8.XOptions = ((global::Gtk.AttachOptions)(4));
			w8.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.hseparator2 = new global::Gtk.HSeparator ();
			this.hseparator2.Name = "hseparator2";
			this.table1.Add (this.hseparator2);
			global::Gtk.Table.TableChild w9 = ((global::Gtk.Table.TableChild)(this.table1 [this.hseparator2]));
			w9.TopAttach = ((uint)(9));
			w9.BottomAttach = ((uint)(10));
			w9.RightAttach = ((uint)(3));
			w9.XOptions = ((global::Gtk.AttachOptions)(4));
			w9.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.hseparator3 = new global::Gtk.HSeparator ();
			this.hseparator3.Name = "hseparator3";
			this.table1.Add (this.hseparator3);
			global::Gtk.Table.TableChild w10 = ((global::Gtk.Table.TableChild)(this.table1 [this.hseparator3]));
			w10.TopAttach = ((uint)(12));
			w10.BottomAttach = ((uint)(13));
			w10.RightAttach = ((uint)(3));
			w10.XOptions = ((global::Gtk.AttachOptions)(4));
			w10.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.labelData = new global::Gtk.Label ();
			this.labelData.Name = "labelData";
			this.labelData.Xalign = 1F;
			this.labelData.LabelProp = global::Mono.Unix.Catalog.GetString ("Data:");
			this.table1.Add (this.labelData);
			global::Gtk.Table.TableChild w11 = ((global::Gtk.Table.TableChild)(this.table1 [this.labelData]));
			w11.TopAttach = ((uint)(2));
			w11.BottomAttach = ((uint)(3));
			w11.XOptions = ((global::Gtk.AttachOptions)(4));
			w11.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.labelDataHint = new global::Gtk.Label ();
			this.labelDataHint.Name = "labelDataHint";
			this.labelDataHint.Xalign = 0F;
			this.labelDataHint.LabelProp = global::Mono.Unix.Catalog.GetString ("<i>Data stored on the device up to 32 symbols</i>");
			this.labelDataHint.UseMarkup = true;
			this.table1.Add (this.labelDataHint);
			global::Gtk.Table.TableChild w12 = ((global::Gtk.Table.TableChild)(this.table1 [this.labelDataHint]));
			w12.TopAttach = ((uint)(3));
			w12.BottomAttach = ((uint)(4));
			w12.LeftAttach = ((uint)(1));
			w12.RightAttach = ((uint)(3));
			w12.XOptions = ((global::Gtk.AttachOptions)(4));
			w12.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.labelLedConfiguration = new global::Gtk.Label ();
			this.labelLedConfiguration.Name = "labelLedConfiguration";
			this.labelLedConfiguration.Xalign = 1F;
			this.labelLedConfiguration.LabelProp = global::Mono.Unix.Catalog.GetString ("LED Configuration:");
			this.table1.Add (this.labelLedConfiguration);
			global::Gtk.Table.TableChild w13 = ((global::Gtk.Table.TableChild)(this.table1 [this.labelLedConfiguration]));
			w13.TopAttach = ((uint)(5));
			w13.BottomAttach = ((uint)(6));
			w13.XOptions = ((global::Gtk.AttachOptions)(4));
			w13.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.labelLedConfigurationHint = new global::Gtk.Label ();
			this.labelLedConfigurationHint.Name = "labelLedConfigurationHint";
			this.labelLedConfigurationHint.Xalign = 0F;
			this.labelLedConfigurationHint.LabelProp = global::Mono.Unix.Catalog.GetString ("<i>Configure the number of LEDs connected to the device. The configuration is use" +
			"d by patterns to play multi LED animations.</i>");
			this.labelLedConfigurationHint.UseMarkup = true;
			this.labelLedConfigurationHint.Wrap = true;
			this.table1.Add (this.labelLedConfigurationHint);
			global::Gtk.Table.TableChild w14 = ((global::Gtk.Table.TableChild)(this.table1 [this.labelLedConfigurationHint]));
			w14.TopAttach = ((uint)(8));
			w14.BottomAttach = ((uint)(9));
			w14.LeftAttach = ((uint)(1));
			w14.RightAttach = ((uint)(3));
			w14.XOptions = ((global::Gtk.AttachOptions)(4));
			w14.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.labelLimitBrightness = new global::Gtk.Label ();
			this.labelLimitBrightness.Name = "labelLimitBrightness";
			this.labelLimitBrightness.Xalign = 1F;
			this.labelLimitBrightness.LabelProp = global::Mono.Unix.Catalog.GetString ("Limit Brightness:");
			this.table1.Add (this.labelLimitBrightness);
			global::Gtk.Table.TableChild w15 = ((global::Gtk.Table.TableChild)(this.table1 [this.labelLimitBrightness]));
			w15.TopAttach = ((uint)(10));
			w15.BottomAttach = ((uint)(11));
			w15.XOptions = ((global::Gtk.AttachOptions)(4));
			w15.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.labelLimitBrightnessHint = new global::Gtk.Label ();
			this.labelLimitBrightnessHint.Name = "labelLimitBrightnessHint";
			this.labelLimitBrightnessHint.Xalign = 0F;
			this.labelLimitBrightnessHint.LabelProp = global::Mono.Unix.Catalog.GetString ("<i>Limit the maximum amount of brightness for all patterns</i>");
			this.labelLimitBrightnessHint.UseMarkup = true;
			this.table1.Add (this.labelLimitBrightnessHint);
			global::Gtk.Table.TableChild w16 = ((global::Gtk.Table.TableChild)(this.table1 [this.labelLimitBrightnessHint]));
			w16.TopAttach = ((uint)(11));
			w16.BottomAttach = ((uint)(12));
			w16.LeftAttach = ((uint)(1));
			w16.RightAttach = ((uint)(3));
			w16.XOptions = ((global::Gtk.AttachOptions)(4));
			w16.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.labelMode = new global::Gtk.Label ();
			this.labelMode.Name = "labelMode";
			this.labelMode.Xalign = 1F;
			this.labelMode.LabelProp = global::Mono.Unix.Catalog.GetString ("Mode:");
			this.table1.Add (this.labelMode);
			global::Gtk.Table.TableChild w17 = ((global::Gtk.Table.TableChild)(this.table1 [this.labelMode]));
			w17.TopAttach = ((uint)(13));
			w17.BottomAttach = ((uint)(14));
			w17.XOptions = ((global::Gtk.AttachOptions)(4));
			w17.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.labelModeInverseHint = new global::Gtk.Label ();
			this.labelModeInverseHint.Name = "labelModeInverseHint";
			this.labelModeInverseHint.Xalign = 0F;
			this.labelModeInverseHint.LabelProp = global::Mono.Unix.Catalog.GetString ("<i>Control LED strip in inverse mode</i>");
			this.labelModeInverseHint.UseMarkup = true;
			this.table1.Add (this.labelModeInverseHint);
			global::Gtk.Table.TableChild w18 = ((global::Gtk.Table.TableChild)(this.table1 [this.labelModeInverseHint]));
			w18.TopAttach = ((uint)(16));
			w18.BottomAttach = ((uint)(17));
			w18.LeftAttach = ((uint)(1));
			w18.RightAttach = ((uint)(3));
			w18.XPadding = ((uint)(24));
			w18.XOptions = ((global::Gtk.AttachOptions)(4));
			w18.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.labelModeMultiLEDHint = new global::Gtk.Label ();
			this.labelModeMultiLEDHint.Name = "labelModeMultiLEDHint";
			this.labelModeMultiLEDHint.Xalign = 0F;
			this.labelModeMultiLEDHint.LabelProp = global::Mono.Unix.Catalog.GetString ("<i>Control individually addressable LEDs</i>");
			this.labelModeMultiLEDHint.UseMarkup = true;
			this.table1.Add (this.labelModeMultiLEDHint);
			global::Gtk.Table.TableChild w19 = ((global::Gtk.Table.TableChild)(this.table1 [this.labelModeMultiLEDHint]));
			w19.TopAttach = ((uint)(18));
			w19.BottomAttach = ((uint)(19));
			w19.LeftAttach = ((uint)(1));
			w19.RightAttach = ((uint)(3));
			w19.XPadding = ((uint)(24));
			w19.XOptions = ((global::Gtk.AttachOptions)(4));
			w19.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.labelModeMultiLEDMirrorHint = new global::Gtk.Label ();
			this.labelModeMultiLEDMirrorHint.Name = "labelModeMultiLEDMirrorHint";
			this.labelModeMultiLEDMirrorHint.Xalign = 0F;
			this.labelModeMultiLEDMirrorHint.LabelProp = global::Mono.Unix.Catalog.GetString ("<i>Light up all LEDs with the same color</i>");
			this.labelModeMultiLEDMirrorHint.UseMarkup = true;
			this.table1.Add (this.labelModeMultiLEDMirrorHint);
			global::Gtk.Table.TableChild w20 = ((global::Gtk.Table.TableChild)(this.table1 [this.labelModeMultiLEDMirrorHint]));
			w20.TopAttach = ((uint)(20));
			w20.BottomAttach = ((uint)(21));
			w20.LeftAttach = ((uint)(1));
			w20.RightAttach = ((uint)(3));
			w20.XPadding = ((uint)(24));
			w20.XOptions = ((global::Gtk.AttachOptions)(4));
			w20.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.labelModeRGBHint = new global::Gtk.Label ();
			this.labelModeRGBHint.Name = "labelModeRGBHint";
			this.labelModeRGBHint.Xalign = 0F;
			this.labelModeRGBHint.LabelProp = global::Mono.Unix.Catalog.GetString ("<i>Control single pixel</i>");
			this.labelModeRGBHint.UseMarkup = true;
			this.table1.Add (this.labelModeRGBHint);
			global::Gtk.Table.TableChild w21 = ((global::Gtk.Table.TableChild)(this.table1 [this.labelModeRGBHint]));
			w21.TopAttach = ((uint)(14));
			w21.BottomAttach = ((uint)(15));
			w21.LeftAttach = ((uint)(1));
			w21.RightAttach = ((uint)(3));
			w21.XPadding = ((uint)(24));
			w21.XOptions = ((global::Gtk.AttachOptions)(4));
			w21.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.labelName = new global::Gtk.Label ();
			this.labelName.Name = "labelName";
			this.labelName.Xalign = 1F;
			this.labelName.LabelProp = global::Mono.Unix.Catalog.GetString ("Name:");
			this.table1.Add (this.labelName);
			global::Gtk.Table.TableChild w22 = ((global::Gtk.Table.TableChild)(this.table1 [this.labelName]));
			w22.XOptions = ((global::Gtk.AttachOptions)(4));
			w22.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.labelNameHint = new global::Gtk.Label ();
			this.labelNameHint.Name = "labelNameHint";
			this.labelNameHint.Xalign = 0F;
			this.labelNameHint.LabelProp = global::Mono.Unix.Catalog.GetString ("<i>The name of the device visible in the UI instead of the serial number</i>");
			this.labelNameHint.UseMarkup = true;
			this.table1.Add (this.labelNameHint);
			global::Gtk.Table.TableChild w23 = ((global::Gtk.Table.TableChild)(this.table1 [this.labelNameHint]));
			w23.TopAttach = ((uint)(1));
			w23.BottomAttach = ((uint)(2));
			w23.LeftAttach = ((uint)(1));
			w23.RightAttach = ((uint)(3));
			w23.XOptions = ((global::Gtk.AttachOptions)(4));
			w23.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.radiobuttonModeInverse = new global::Gtk.RadioButton (global::Mono.Unix.Catalog.GetString ("Inverse"));
			this.radiobuttonModeInverse.CanFocus = true;
			this.radiobuttonModeInverse.Name = "radiobuttonModeInverse";
			this.radiobuttonModeInverse.DrawIndicator = true;
			this.radiobuttonModeInverse.UseUnderline = true;
			this.radiobuttonModeInverse.Group = new global::GLib.SList (global::System.IntPtr.Zero);
			this.table1.Add (this.radiobuttonModeInverse);
			global::Gtk.Table.TableChild w24 = ((global::Gtk.Table.TableChild)(this.table1 [this.radiobuttonModeInverse]));
			w24.TopAttach = ((uint)(15));
			w24.BottomAttach = ((uint)(16));
			w24.LeftAttach = ((uint)(1));
			w24.RightAttach = ((uint)(2));
			w24.XOptions = ((global::Gtk.AttachOptions)(4));
			w24.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.radiobuttonModeMultiLED = new global::Gtk.RadioButton (global::Mono.Unix.Catalog.GetString ("Multi-LED"));
			this.radiobuttonModeMultiLED.CanFocus = true;
			this.radiobuttonModeMultiLED.Name = "radiobuttonModeMultiLED";
			this.radiobuttonModeMultiLED.DrawIndicator = true;
			this.radiobuttonModeMultiLED.UseUnderline = true;
			this.radiobuttonModeMultiLED.Group = this.radiobuttonModeInverse.Group;
			this.table1.Add (this.radiobuttonModeMultiLED);
			global::Gtk.Table.TableChild w25 = ((global::Gtk.Table.TableChild)(this.table1 [this.radiobuttonModeMultiLED]));
			w25.TopAttach = ((uint)(17));
			w25.BottomAttach = ((uint)(18));
			w25.LeftAttach = ((uint)(1));
			w25.RightAttach = ((uint)(2));
			w25.XOptions = ((global::Gtk.AttachOptions)(4));
			w25.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.radiobuttonModeMultiLEDMirror = new global::Gtk.RadioButton (global::Mono.Unix.Catalog.GetString ("Multi-LED Mirror"));
			this.radiobuttonModeMultiLEDMirror.CanFocus = true;
			this.radiobuttonModeMultiLEDMirror.Name = "radiobuttonModeMultiLEDMirror";
			this.radiobuttonModeMultiLEDMirror.DrawIndicator = true;
			this.radiobuttonModeMultiLEDMirror.UseUnderline = true;
			this.radiobuttonModeMultiLEDMirror.Group = this.radiobuttonModeInverse.Group;
			this.table1.Add (this.radiobuttonModeMultiLEDMirror);
			global::Gtk.Table.TableChild w26 = ((global::Gtk.Table.TableChild)(this.table1 [this.radiobuttonModeMultiLEDMirror]));
			w26.TopAttach = ((uint)(19));
			w26.BottomAttach = ((uint)(20));
			w26.LeftAttach = ((uint)(1));
			w26.RightAttach = ((uint)(2));
			w26.XOptions = ((global::Gtk.AttachOptions)(4));
			w26.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.radiobuttonModeRGB = new global::Gtk.RadioButton (global::Mono.Unix.Catalog.GetString ("RGB"));
			this.radiobuttonModeRGB.CanFocus = true;
			this.radiobuttonModeRGB.Name = "radiobuttonModeRGB";
			this.radiobuttonModeRGB.DrawIndicator = true;
			this.radiobuttonModeRGB.UseUnderline = true;
			this.radiobuttonModeRGB.Group = this.radiobuttonModeInverse.Group;
			this.table1.Add (this.radiobuttonModeRGB);
			global::Gtk.Table.TableChild w27 = ((global::Gtk.Table.TableChild)(this.table1 [this.radiobuttonModeRGB]));
			w27.TopAttach = ((uint)(13));
			w27.BottomAttach = ((uint)(14));
			w27.LeftAttach = ((uint)(1));
			w27.RightAttach = ((uint)(2));
			w27.XOptions = ((global::Gtk.AttachOptions)(4));
			w27.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.spinbuttonChannelB = new global::Gtk.SpinButton (0D, 100D, 1D);
			this.spinbuttonChannelB.WidthRequest = 30;
			this.spinbuttonChannelB.CanFocus = true;
			this.spinbuttonChannelB.Name = "spinbuttonChannelB";
			this.spinbuttonChannelB.Adjustment.PageIncrement = 10D;
			this.spinbuttonChannelB.ClimbRate = 1D;
			this.spinbuttonChannelB.Numeric = true;
			this.table1.Add (this.spinbuttonChannelB);
			global::Gtk.Table.TableChild w28 = ((global::Gtk.Table.TableChild)(this.table1 [this.spinbuttonChannelB]));
			w28.TopAttach = ((uint)(7));
			w28.BottomAttach = ((uint)(8));
			w28.LeftAttach = ((uint)(2));
			w28.RightAttach = ((uint)(3));
			w28.XOptions = ((global::Gtk.AttachOptions)(4));
			w28.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.spinbuttonChannelG = new global::Gtk.SpinButton (0D, 100D, 1D);
			this.spinbuttonChannelG.WidthRequest = 30;
			this.spinbuttonChannelG.CanFocus = true;
			this.spinbuttonChannelG.Name = "spinbuttonChannelG";
			this.spinbuttonChannelG.Adjustment.PageIncrement = 10D;
			this.spinbuttonChannelG.ClimbRate = 1D;
			this.spinbuttonChannelG.Numeric = true;
			this.table1.Add (this.spinbuttonChannelG);
			global::Gtk.Table.TableChild w29 = ((global::Gtk.Table.TableChild)(this.table1 [this.spinbuttonChannelG]));
			w29.TopAttach = ((uint)(6));
			w29.BottomAttach = ((uint)(7));
			w29.LeftAttach = ((uint)(2));
			w29.RightAttach = ((uint)(3));
			w29.XOptions = ((global::Gtk.AttachOptions)(4));
			w29.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.spinbuttonChannelR = new global::Gtk.SpinButton (0D, 100D, 1D);
			this.spinbuttonChannelR.WidthRequest = 30;
			this.spinbuttonChannelR.CanFocus = true;
			this.spinbuttonChannelR.Name = "spinbuttonChannelR";
			this.spinbuttonChannelR.Adjustment.PageIncrement = 10D;
			this.spinbuttonChannelR.ClimbRate = 1D;
			this.spinbuttonChannelR.Numeric = true;
			this.table1.Add (this.spinbuttonChannelR);
			global::Gtk.Table.TableChild w30 = ((global::Gtk.Table.TableChild)(this.table1 [this.spinbuttonChannelR]));
			w30.TopAttach = ((uint)(5));
			w30.BottomAttach = ((uint)(6));
			w30.LeftAttach = ((uint)(2));
			w30.RightAttach = ((uint)(3));
			w30.XOptions = ((global::Gtk.AttachOptions)(4));
			w30.YOptions = ((global::Gtk.AttachOptions)(4));
			w1.Add (this.table1);
			global::Gtk.Box.BoxChild w31 = ((global::Gtk.Box.BoxChild)(w1 [this.table1]));
			w31.Position = 0;
			w31.Expand = false;
			w31.Fill = false;
			// Internal child BlinkStickClient.ConfigureBlinkStickDialog.ActionArea
			global::Gtk.HButtonBox w32 = this.ActionArea;
			w32.Name = "dialog1_ActionArea";
			w32.Spacing = 10;
			w32.BorderWidth = ((uint)(5));
			w32.LayoutStyle = ((global::Gtk.ButtonBoxStyle)(4));
			// Container child dialog1_ActionArea.Gtk.ButtonBox+ButtonBoxChild
			this.buttonCancel = new global::Gtk.Button ();
			this.buttonCancel.CanDefault = true;
			this.buttonCancel.CanFocus = true;
			this.buttonCancel.Name = "buttonCancel";
			this.buttonCancel.UseStock = true;
			this.buttonCancel.UseUnderline = true;
			this.buttonCancel.Label = "gtk-cancel";
			this.AddActionWidget (this.buttonCancel, -6);
			global::Gtk.ButtonBox.ButtonBoxChild w33 = ((global::Gtk.ButtonBox.ButtonBoxChild)(w32 [this.buttonCancel]));
			w33.Expand = false;
			w33.Fill = false;
			// Container child dialog1_ActionArea.Gtk.ButtonBox+ButtonBoxChild
			this.buttonOk = new global::Gtk.Button ();
			this.buttonOk.CanDefault = true;
			this.buttonOk.CanFocus = true;
			this.buttonOk.Name = "buttonOk";
			this.buttonOk.UseStock = true;
			this.buttonOk.UseUnderline = true;
			this.buttonOk.Label = "gtk-ok";
			this.AddActionWidget (this.buttonOk, -5);
			global::Gtk.ButtonBox.ButtonBoxChild w34 = ((global::Gtk.ButtonBox.ButtonBoxChild)(w32 [this.buttonOk]));
			w34.Position = 1;
			w34.Expand = false;
			w34.Fill = false;
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			this.DefaultWidth = 529;
			this.DefaultHeight = 609;
			this.Show ();
		}
	}
}
